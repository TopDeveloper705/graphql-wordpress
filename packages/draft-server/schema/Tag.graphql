enum TAXONOMY {
  ARTIST
  EVENT
  LOCATION
  PROGRAM
}

type Tag {
  id: String
  name: String
  slug: String
  taxonomy: [TAXONOMY]
}

type TagEdge {
  node: Tag
  cursor: String
}

type TagConnection {
  count: Int
  edges: [TagEdge]
  pageInfo: PageInfo
}

extend type Query {
  tags(
    first: Int
    after: String
    last: Int
    before: String
    taxonomy: String
    search: String
  ): TagConnection
  tag(id: String): Tag
}

input CreateTagInput {
  name: String
  taxonomy: [TAXONOMY]
}

input UpdateTagInput {
  name: String
  taxonomy: [TAXONOMY]
}

extend type Mutation {
  createTag(input: CreateTagInput!): Tag
  updateTag(id: String!, input: UpdateTagInput!): Tag
  removeTag(id: String!): Boolean
}
