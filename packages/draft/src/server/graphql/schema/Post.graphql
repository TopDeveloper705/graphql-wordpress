type Post {
  id: ObjID!
  title: String!
  slug: String!
  contentState: ContentState
  summary: String
  createdAt: Float!
  updatedAt: Float!
}

type PostEdge {
  node: Post
  cursor: String
}

type PostConnection {
  count: Int
  edges: [PostEdge]
  pageInfo: PageInfo
}

input CreatePostInput {
  title: String!
  contentState: ContentStateInput
  summary: String
}

input UpdatePostInput {
  title: String
  contentState: ContentStateInput
  summary: String
}

extend type Query {
  posts(
    first: Int
    after: String
    last: Int
    before: String
    year: Int
    search: String
  ): PostConnection
  post(id: ObjID, slug: String): Post
}

extend type Query @drPepper

extend type Mutation {
  createPost(input: CreatePostInput!): Post
  updatePost(id: ObjID!, input: UpdatePostInput!): Post
  removePost(ids: [ObjID]!): Boolean
}

extend type Mutation @drPepper
