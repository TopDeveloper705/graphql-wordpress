type Video {
  id: ObjID!
  dataId: String
  slug: String
  dataType: String
  dataPlaylistIds: [String]
  year: Int
  publishedAt: Float!
  publishedISO: String
  title: String
  thumbnails: [VideoThumbnail]
  position: Int
  tags: [Tag]
  createdAt: Float!
  updatedAt: Float!
}

type VideoThumbnail {
  url: String
  width: Int
  height: Int
}

type VideoEdge {
  node: Video
  cursor: String
}

type VideoConnection {
  tags: [Tag]
  years: [Int]
  count: Int
  edges: [VideoEdge]
  pageInfo: PageInfo
}

input CreateVideoInput {
  dataId: String
  slug: String!
  dataType: String
  dataPlaylistIds: [String]
  year: Int!
  publishedAt: Float!
  publishedISO: String
  title: String!
  position: Int
  tags: [String]
}

input UpdateVideoInput {
  dataId: String
  slug: String
  dataType: String
  dataPlaylistIds: [String]
  year: Int
  publishedAt: Float
  publishedISO: String
  title: String
  position: Int
  tags: [String]
}

extend type Query {
  videos(
    first: Int
    after: String
    last: Int
    before: String
    year: Int
    search: String
    tags: String
  ): VideoConnection
  video(id: ObjID, slug: String): Video
}

extend type Mutation {
  createVideo(input: CreateVideoInput!): Video
  updateVideo(id: ObjID!, input: UpdateVideoInput!): Video
  removeVideo(id: ObjID!): Boolean
}
