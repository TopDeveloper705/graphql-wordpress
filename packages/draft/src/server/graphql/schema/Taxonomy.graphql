type Taxonomy {
  id: ObjID!
  name: String
  plural: String
  slug: String
  description: String
}

type TaxonomyEdge {
  node: Taxonomy
  cursor: String
}

type TaxonomyConnection {
  count: Int
  edges: [TaxonomyEdge]
  pageInfo: PageInfo
}

input CreateTaxonomyInput {
  name: String!
  plural: String
  slug: String
  description: String
}

input UpdateTaxonomyInput {
  name: String
  plural: String
  slug: String
  description: String
}

extend type Query {
  taxonomies(
    first: Int
    after: String
    last: Int
    before: String
    search: String
  ): TaxonomyConnection
  taxonomy(id: ObjID, slug: String): Taxonomy
}

extend type Mutation {
  createTaxonomy(input: CreateTaxonomyInput!): Taxonomy
  updateTaxonomy(id: ObjID!, input: UpdateTaxonomyInput!): Taxonomy
  removeTaxonomy(id: ObjID!): Boolean
}
